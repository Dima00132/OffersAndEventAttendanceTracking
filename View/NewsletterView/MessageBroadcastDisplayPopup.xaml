<?xml version="1.0" encoding="utf-8" ?>
<toolkit:Popup xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ScannerAndDistributionOfQRCodes.View.NewsletterView.MessageBroadcastDisplayPopup"
              xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
               xmlns:mail = "clr-namespace:ScannerAndDistributionOfQRCodes.Data.Message"
               xmlns:model = "clr-namespace:ScannerAndDistributionOfQRCodes.Data.Message.Mail"
               xmlns:view ="clr-namespace:ScannerAndDistributionOfQRCodes.View"
               xmlns:viewmodel ="clr-namespace:ScannerAndDistributionOfQRCodes.ViewModel.NewsletterViewModel"
               CanBeDismissedByTappingOutsideOfPopup ="False"
               x:Name="messageBroadcastDisplayPopup"
               Color="{AppThemeBinding Light=#FFEAE7EC, Dark=#1f1f1f  }">

    
    <!--<toolkit:Popup.Resources>
       <Style TargetType="{x:Type view:DisplayAlertSendingMessagesErrorPopup}">
           <Setter Property="Size" Value="500,700" />
           <Setter Property="Color" Value="Red" />
           <Setter Property="HorizontalOptions" Value="Center" />
           <Setter Property="VerticalOptions" Value="Start" />
           <Setter Property="CanBeDismissedByTappingOutsideOfPopup" Value="True" />
       </Style>
   </toolkit:Popup.Resources>-->


    <Border Padding="0" 
            HeightRequest="600"
            WidthRequest="450"
            Stroke="Transparent"
            BackgroundColor="{AppThemeBinding Light=#FFEAE7EC, Dark=#1f1f1f  }">
        <Grid RowDefinitions="*,50" 
              Margin="5">
            <StackLayout Grid.Column="0" 
                         Margin="10" 
                         Spacing="15" >
                <Grid ColumnDefinitions="*,55,40" 
                      ColumnSpacing="5">
                    <Label Text="Укажите под какой колонкой находится данные с почтой в xlsx документе"/>
                    <Entry Grid.Column="1" HorizontalOptions="Start" Text="{Binding ColumnNumber}" TextTransform="Uppercase" 
                       MaxLength="2" TextChanged="Entry_TextChanged" >
                        <Entry.Behaviors>
                            <toolkit:EventToCommandBehavior
                            EventName="TextChanged"
                            Command="{Binding TextChangedCommand}" />
                        </Entry.Behaviors>
                    </Entry>
                    <Image Grid.Column="2" x:Name="imageEntry" IsVisible="False" Source="check_mark.png"/>
                </Grid>
                <Grid x:Name="parserGrid" IsVisible="False" ColumnDefinitions="*,40" ColumnSpacing="5">
                    <Button x:Name="parserButton" Grid.Column="0"  BackgroundColor="#d48055"  Text="Добавить файл" Command="{Binding ParserCommand}" Clicked="Button_Clicked" />
                    <Image Grid.Column="1" x:Name="imageButton" IsVisible="{Binding IsReadyToShip}" Source="check_mark.png"/>
                </Grid>
                <Grid IsVisible="{Binding IsReadyToShip}"  ColumnDefinitions="*,40" ColumnSpacing="5">
                    <Label>
                        <Label.Text>
                            <MultiBinding StringFormat="{} Всего данных  {0}    Валидных  {1} ">
                                <Binding Path="CountOfMils" />
                                <Binding Path="CountOfCorrectMils"  />
                            </MultiBinding>
                        </Label.Text>
                    </Label>
                </Grid>
                <Grid x:Name="stateSend"  IsVisible="False"  ColumnDefinitions="*,40" ColumnSpacing="5">
                    <Label>
                        <Label.Text>
                            <MultiBinding StringFormat="{} Отправлено соооющений  {0} из {1}  : Ошибок  {2} ">
                                <Binding Path="CountSendMessages" />
                                <Binding Path="CountOfCorrectMils"/>
                                <Binding Path="CountUnsendMessages"  />
                            </MultiBinding>
                        </Label.Text>
                    </Label>
                </Grid>
                
                    
                    <CollectionView  IsVisible="{Binding IsErrorMessages}"
                            AbsoluteLayout.LayoutFlags="All"
                            ItemsSource="{Binding ErrorMessages}">
                            <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="{x:Type mail:ErrorMessage( model:Mail) }">
                                    <Frame Padding="5">
                                        <Grid RowDefinitions="20,*" >
                                            <Label Grid.Row="0" 
                                       FontSize="Caption"
                                       Text="{Binding ErrorObject.MailAddress}"/>
                                            <Button Grid.Row="1" 
                                        HorizontalOptions="Start" 
                                        FontSize="Body"
                                        VerticalOptions="Start"
                                        Text="Посмотреть сообщение ошибки" BackgroundColor="White"
                                        ImageSource="erroe_image.png" TextColor="#ff3b1f" 
                                        Command="{Binding Path= ViewErrorMessageCommand ,Source={RelativeSource AncestorType={x:Type viewmodel:MessageBroadcastDisplayViewModel}}}"
                                        CommandParameter="{Binding .}"/>
                                        </Grid>
                                    </Frame>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                 
            </StackLayout>
            <Grid Grid.Row="1" ColumnDefinitions="*,*" ColumnSpacing="5">
                <Button Grid.Column="1" BackgroundColor="#d48055" x:Name="sendButton" Text="Отправить" IsEnabled="{Binding IsReadyToShip}" Clicked="sendButton_Clicked" Command="{Binding SendCommand}"/>
                <Button Grid.Column="0" BackgroundColor="#d48055" Text="Назад" IsEnabled="{Binding IsMessagesDoNotSend}"  Command="{Binding CancelCommand}" CommandParameter="{Binding Source={x:Reference messageBroadcastDisplayPopup}}"/>
            </Grid>
        </Grid>
    </Border>
</toolkit:Popup>